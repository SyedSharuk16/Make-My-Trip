@{
    ViewData["Title"] = "Plan Your Trip with Google Maps";
}

<h2>Plan Your Trip</h2>

@if (ViewBag.Error != null)
{
    <div class="alert alert-danger">
        @ViewBag.Error
    </div>
}

<form id="trip-form">
    <div class="form-group">
        <label for="fuelEfficiency">Fuel Efficiency (km/l):</label>
        <input type="number" id="fuelEfficiency" name="fuelEfficiency" class="form-control" required />
    </div>

    <div class="form-group">
        <label for="fuelPrice">Fuel Price (per liter):</label>
        <input type="number" id="fuelPrice" name="fuelPrice" class="form-control" required />
    </div>

    <div id="map" style="width: 100%; height: 400px;" class="mt-3"></div>
    <p class="mt-3">Click on the map to add locations.</p>
    
    <ul id="locations" class="list-group mb-3"></ul>

    <button type="button" id="calculate" class="btn btn-primary">Calculate</button>
</form>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBTpdDdKzSaYcOma3ZYTN32oW7Aa0MXQWE&callback=initMap" async defer></script>
<script>
    let map, locations = [], markers = [];

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: { lat: 1.3521, lng: 103.8198 }, // Singapore
            zoom: 11
        });

        map.addListener('click', function(event) {
            const location = { lat: event.latLng.lat(), lng: event.latLng.lng() };
            locations.push(location);

            const marker = new google.maps.Marker({
                position: location,
                map: map
            });
            markers.push(marker);

            document.getElementById('locations').innerHTML += `<li class="list-group-item">Lat: ${location.lat.toFixed(5)}, Lng: ${location.lng.toFixed(5)}</li>`;
        });
    }

    document.getElementById('calculate').addEventListener('click', async () => {
        if (locations.length < 2) {
            alert('Please add at least two locations.');
            return;
        }

        const fuelEfficiency = parseFloat(document.getElementById('fuelEfficiency').value);
        const fuelPrice = parseFloat(document.getElementById('fuelPrice').value);

        const service = new google.maps.DistanceMatrixService();
        service.getDistanceMatrix(
            {
                origins: [locations[0]],
                destinations: locations.slice(1),
                travelMode: 'DRIVING'
            },
            (response, status) => {
                if (status === 'OK') {
                    const rows = response.rows[0].elements;
                    const totalDistance = rows.reduce((acc, cur) => acc + cur.distance.value, 0) / 1000; // in km
                    const totalDuration = rows.reduce((acc, cur) => acc + cur.duration.value, 0) / 3600; // in hours
                    const fuelCost = (totalDistance / fuelEfficiency) * fuelPrice;

                    alert(`Total Distance: ${totalDistance.toFixed(2)} km\\n` +
                          `Total Duration: ${totalDuration.toFixed(2)} hours\\n` +
                          `Fuel Cost: ${fuelCost.toFixed(2)} SGD`);
                } else {
                    alert('Error calculating distances: ' + status);
                }
            }
        );
    });
</script>
